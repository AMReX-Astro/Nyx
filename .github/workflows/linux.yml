name: linux

on: [push, pull_request]

jobs:

  nyx_gnu:
    name: GNU@7.5 Release
    runs-on: ubuntu-latest
    env: {CXXFLAGS: "-Werror -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        cmake  -S . -B build                      \
            -DNyx_HEATCOOL=yes                    \
            -DNyx_HYDRO=yes
        cmake --build build --parallel 2

  nyx_clang:
    name: Clang@6.0 Debug
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_clang6.sh
    - name: Build & Install
      run: |
        cmake  -S . -B build                          \
            -DCMAKE_BUILD_TYPE=Debug                  \
            -DNyx_HEATCOOL=yes                        \
            -DNyx_HYDRO=yes                           \
            -DCMAKE_C_COMPILER=$(which clang)         \
            -DCMAKE_CXX_COMPILER=$(which clang++)
        cmake --build build --parallel 2

  nyx-cuda:
    name: CUDA@9.1.85 GNU@4.8.5 C++11 Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_nvcc.sh
    - name: Build & Install
      run: |
        cmake  -S . -B build_adiabatic                       \
            -DNyx_HEATCOOL=no                                \
            -DNyx_HYDRO=yes                                  \
            -DNyx_OMP=no                                     \
            -DNyx_GPU_BACKEND=CUDA                           \
            -DCMAKE_C_COMPILER=$(which gcc)                  \
            -DCMAKE_CXX_COMPILER=$(which g++)                \
            -DCMAKE_CUDA_HOST_COMPILER=$(which g++)          \
            -DAMReX_CUDA_ARCH=6.0
        cmake --build build_adiabatic --parallel 2
	
        cmake  -S . -B build                                 \
            -DNyx_HEATCOOL=yes                               \
            -DNyx_HYDRO=yes                                  \
            -DNyx_OMP=no                                     \
            -DNyx_GPU_BACKEND=CUDA                           \
            -DCMAKE_C_COMPILER=$(which gcc)                  \
            -DCMAKE_CXX_COMPILER=$(which g++)                \
            -DCMAKE_CUDA_HOST_COMPILER=$(which g++)          \
            -DAMReX_CUDA_ARCH=6.0
        cmake --build build --parallel 2

  nyx-dpcpp:
    name: DPCPP C++17
    runs-on: ubuntu-20.04
    env: {CXXFLAGS: "-fno-operator-names"}
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_dpcpp.sh
    - name: Build & Install
      run: |
        set +e
        source /opt/intel/oneapi/setvars.sh
        set -e
        cmake  -S . -B build_adiabatic                     \
            -DCMAKE_CXX_COMPILER_ID="Clang"                \
            -DCMAKE_CXX_COMPILER_VERSION=12.0              \
            -DCMAKE_CXX_STANDARD_COMPUTED_DEFAULT="17"     \
            -DNyx_HEATCOOL=no                              \
            -DNyx_HYDRO=yes                                \
            -DNyx_OMP=no                                   \
            -DNyx_GPU_BACKEND=SYCL                         \
            -DCMAKE_C_COMPILER=$(which clang)              \
            -DCMAKE_CXX_COMPILER=$(which dpcpp)
        cmake --build build_adiabatic --parallel 2

        cmake  -S . -B build                               \
            -DCMAKE_CXX_COMPILER_ID="Clang"                \
            -DCMAKE_CXX_COMPILER_VERSION=12.0              \
            -DCMAKE_CXX_STANDARD_COMPUTED_DEFAULT="17"     \
            -DNyx_HEATCOOL=yes                             \
            -DNyx_HYDRO=yes                                \
            -DNyx_OMP=no                                   \
            -DNyx_GPU_BACKEND=SYCL                         \
            -DCMAKE_C_COMPILER=$(which clang)              \
            -DCMAKE_CXX_COMPILER=$(which dpcpp)
        cmake --build build --parallel 2
    # note: setting the CXX compiler ID is a work-around for
    # the 2021.1 DPC++ release / CMake 3.19.0-3.19.1
    # https://gitlab.kitware.com/cmake/cmake/-/issues/21551#note_869580

  nyx-hip:
    name: HIP ROCm@3.8 C++17
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_hip.sh
    - name: Build & Install
      run: |
        source /etc/profile.d/rocm.sh
        hipcc --version
        cmake  -S . -B build_adiabatic                     \
            -DNyx_HEATCOOL=no                              \
            -DNyx_HYDRO=yes                                \
            -DNyx_OMP=no                                   \
            -DNyx_GPU_BACKEND=HIP                          \
            -DAMReX_AMD_ARCH=gfx900                        \
            -DCMAKE_C_COMPILER=$(which clang)              \
            -DCMAKE_CXX_COMPILER=$(which hipcc)
        cmake --build build_adiabatic --parallel 2

        cmake  -S . -B build                               \
            -DNyx_HEATCOOL=yes                             \
            -DNyx_HYDRO=yes                                \
            -DNyx_OMP=no                                   \
            -DNyx_GPU_BACKEND=HIP                          \
            -DAMReX_AMD_ARCH=gfx900                        \
            -DCMAKE_C_COMPILER=$(which clang)              \
            -DCMAKE_CXX_COMPILER=$(which hipcc)
        cmake --build build --parallel 2
